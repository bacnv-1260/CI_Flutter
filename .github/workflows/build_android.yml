name: Build & Release Android
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  check_unit_test:
    name: Unit test
    runs-on: ubuntu-lastest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter pub get
      - run: flutter test --coverage
      - name: Coverage report
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage/lcov.info

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage_ci
          path: ./coverage/

  build_app:
    needs: [check_unit_test]
    name: Build APK
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter pub get
      - name: Install FirebaseCLI
        run: npm install -g firebase-tools
      - name: decode google-service.json
        env:
          GOOGLE_SERVICE_ANDROID_DEV: ${{ secrets.GOOGLE_SERVICE_ANDROID_DEV }}
        run: echo $GOOGLE_SERVICE_ANDROID_DEV > ./android/app/google-services.json
      - name: Make gradlew executable
        run: chmod +x ./android/gradlew
      - name: Build Debug APK
        run: fastlane buildApp
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: flutterci-apk
          path: build/app/outputs/apk/develop/release/

#  beta_apk:
#    name: Upload
#    needs: [build_app]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/download-artifact@v2
#        with:
#          name: flutterci-apk
#          working-directory: build/app/outputs/apk/develop/release/
#      - name: upload artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
#        with:
#          appId: ${{ secrets.ANDROID_ID_FIREBASE_DEV }}
#          token: ${{ secrets.FIREBASE_TOKEN }}
#          groups: team-ci
#          file: ./build/app/outputs/apk/develop/release/app-develop-release.apk
#      - name: Push ChatWork
#        run: fastlane pushChatWork room_id:"193066762" token:${{ secrets.CHATWORK_API_TOKEN }}

  create_release:
    needs: [build_app]
    name: Release version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
